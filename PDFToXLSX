{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5f20aa30",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-09-02T15:16:54.374513Z",
     "iopub.status.busy": "2024-09-02T15:16:54.373435Z",
     "iopub.status.idle": "2024-09-02T15:17:12.351298Z",
     "shell.execute_reply": "2024-09-02T15:17:12.349586Z"
    },
    "papermill": {
     "duration": 17.98686,
     "end_time": "2024-09-02T15:17:12.354254",
     "exception": false,
     "start_time": "2024-09-02T15:16:54.367394",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting tabula-py\r\n",
      "  Downloading tabula_py-2.9.3-py3-none-any.whl.metadata (7.6 kB)\r\n",
      "Requirement already satisfied: pandas>=0.25.3 in /opt/conda/lib/python3.10/site-packages (from tabula-py) (2.2.2)\r\n",
      "Requirement already satisfied: numpy in /opt/conda/lib/python3.10/site-packages (from tabula-py) (1.26.4)\r\n",
      "Requirement already satisfied: distro in /opt/conda/lib/python3.10/site-packages (from tabula-py) (1.9.0)\r\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in /opt/conda/lib/python3.10/site-packages (from pandas>=0.25.3->tabula-py) (2.9.0.post0)\r\n",
      "Requirement already satisfied: pytz>=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas>=0.25.3->tabula-py) (2024.1)\r\n",
      "Requirement already satisfied: tzdata>=2022.7 in /opt/conda/lib/python3.10/site-packages (from pandas>=0.25.3->tabula-py) (2024.1)\r\n",
      "Requirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.8.2->pandas>=0.25.3->tabula-py) (1.16.0)\r\n",
      "Downloading tabula_py-2.9.3-py3-none-any.whl (12.0 MB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m12.0/12.0 MB\u001b[0m \u001b[31m56.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hInstalling collected packages: tabula-py\r\n",
      "Successfully installed tabula-py-2.9.3\r\n"
     ]
    }
   ],
   "source": [
    "!pip install tabula-py"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "6184d2bd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-02T15:17:12.365913Z",
     "iopub.status.busy": "2024-09-02T15:17:12.365482Z",
     "iopub.status.idle": "2024-09-02T15:17:12.876851Z",
     "shell.execute_reply": "2024-09-02T15:17:12.875693Z"
    },
    "papermill": {
     "duration": 0.521024,
     "end_time": "2024-09-02T15:17:12.880154",
     "exception": false,
     "start_time": "2024-09-02T15:17:12.359130",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import tabula\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0abd00aa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-02T15:17:12.892086Z",
     "iopub.status.busy": "2024-09-02T15:17:12.891071Z",
     "iopub.status.idle": "2024-09-02T15:17:12.896724Z",
     "shell.execute_reply": "2024-09-02T15:17:12.895529Z"
    },
    "papermill": {
     "duration": 0.014428,
     "end_time": "2024-09-02T15:17:12.899208",
     "exception": false,
     "start_time": "2024-09-02T15:17:12.884780",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Specify the path to your PDF\n",
    "file_path = '../input/aymanpdf/immunogenicity_of_the_10_valent_pneumococcal.2-5.pdf'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "900a7e07",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-02T15:17:12.910279Z",
     "iopub.status.busy": "2024-09-02T15:17:12.909815Z",
     "iopub.status.idle": "2024-09-02T15:17:12.918772Z",
     "shell.execute_reply": "2024-09-02T15:17:12.917679Z"
    },
    "papermill": {
     "duration": 0.017427,
     "end_time": "2024-09-02T15:17:12.921287",
     "exception": false,
     "start_time": "2024-09-02T15:17:12.903860",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Function to extract a specific table from a specific page\n",
    "def extract_specific_table(file_path, page_number, table_index):\n",
    "    # Extract tables from the specified page\n",
    "    tables = tabula.read_pdf(file_path, pages=page_number, multiple_tables=True)\n",
    "\n",
    "    # Check how many tables were extracted\n",
    "    print(f\"Number of tables extracted from page {page_number}: {len(tables)}\")\n",
    "    \n",
    "    # Check if the desired table index is within the extracted tables\n",
    "    if table_index < len(tables):\n",
    "        # Extract the specified table\n",
    "        df = tables[table_index]\n",
    "        print(f\"Extracting table {table_index} from page {page_number}:\\n\")\n",
    "        print(df)\n",
    "        \n",
    "        # Save the specified table to an Excel file\n",
    "        output_filename = f'extracted_table_page_{page_number}_table_{table_index}.xlsx'\n",
    "        df.to_excel(output_filename, index=False)\n",
    "        print(f\"Table saved as {output_filename}\")\n",
    "\n",
    "        # Provide a download link for the file\n",
    "        from IPython.display import FileLink\n",
    "        return FileLink(output_filename)\n",
    "    else:\n",
    "        print(f\"Table index {table_index} is out of range for page {page_number}.\")\n",
    "        return None"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "15e303ba",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-02T15:17:12.932691Z",
     "iopub.status.busy": "2024-09-02T15:17:12.931922Z",
     "iopub.status.idle": "2024-09-02T15:17:16.849910Z",
     "shell.execute_reply": "2024-09-02T15:17:16.848788Z"
    },
    "papermill": {
     "duration": 3.926704,
     "end_time": "2024-09-02T15:17:16.852675",
     "exception": false,
     "start_time": "2024-09-02T15:17:12.925971",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of tables extracted from page 1: 1\n",
      "Extracting table 0 from page 1:\n",
      "\n",
      "                  Unnamed: 0     (95% CI)   (95% CI).1   (95% CI).2  \\\n",
      "0          Vaccine serotypes          NaN          NaN          NaN   \n",
      "1                          1         97.3         90.2         1.05   \n",
      "2                        NaN  (96.1–98.2)  (88.3–91.9)  (1.00–1.10)   \n",
      "3                          4         97.1         94.8         1.45   \n",
      "4                        NaN  (95.9–98.0)  (93.4–96.1)  (1.38–1.53)   \n",
      "5                          5         99.0         95.5         1.70   \n",
      "6                        NaN  (98.2–99.5)  (94.1–96.6)  (1.62–1.78)   \n",
      "7                         6B         65.9         54.8         0.33   \n",
      "8                        NaN  (63.0–68.7)  (51.8–57.8)  (0.30–0.36)   \n",
      "9                         7F         99.5         97.4         1.72   \n",
      "10                       NaN  (98.8–99.8)  (96.3–98.2)  (1.64–1.80)   \n",
      "11                        9V         98.1         94.0         1.32   \n",
      "12                       NaN  (97.1–98.8)  (92.4–95.3)  (1.25–1.38)   \n",
      "13                        14         99.5         99.0         2.90   \n",
      "14                       NaN  (98.9–99.9)  (98.2–99.5)  (2.75–3.05)   \n",
      "15                       18C         96.0         90.7         1.66   \n",
      "16                       NaN  (94.7–97.1)  (88.8–92.3)  (1.56–1.77)   \n",
      "17                       19F         95.4         89.1         1.84   \n",
      "18                       NaN  (94.0–96.5)  (87.1–90.9)  (1.71–1.98)   \n",
      "19                       23F         81.4         66.6         0.53   \n",
      "20                       NaN  (79.0–83.7)  (63.7–69.4)  (0.50–0.57)   \n",
      "21  Cross-reactive serotypes          NaN      (N 279)          NaN   \n",
      "22                        6A         22.2          9.7         0.07   \n",
      "23                       NaN  (17.5–27.6)   (6.5–13.8)  (0.06–0.08)   \n",
      "24                       19A         22.6          8.2         0.08   \n",
      "25                       NaN  (17.8–27.9)   (5.3–12.1)  (0.07–0.09)   \n",
      "\n",
      "     (95% CI).3   (95% CI).4   (95% CI).5   (95% CI).6       (95% CI).7  \\\n",
      "0           NaN          NaN          NaN          NaN              NaN   \n",
      "1           4.0          1.6         0.03         65.7             25.3   \n",
      "2     (2.3–6.6)    (0.6–3.5)  (0.03–0.03)  (59.7–71.3)      (21.0–30.6)   \n",
      "3           100         99.2         2.78         99.6            734.9   \n",
      "4    (99.0–100)  (97.7–99.8)  (2.58–3.00)   (97.9–100)    (655.6–823.9)   \n",
      "5           1.9          1.3         0.03         90.9             59.9   \n",
      "6     (0.8–3.8)    (0.4–3.1)  (0.03–0.03)  (86.7–94.1)      (51.4–69.7)   \n",
      "7          79.0         70.7         0.59         92.4            457.4   \n",
      "8   (74.5–83.1)  (65.8–75.3)  (0.51–0.67)  (88.5–95.3)    (373.7–559.9)   \n",
      "9           4.5          2.7         0.04         99.6           2253.9   \n",
      "10    (2.7–7.2)    (1.3–4.8)  (0.04–0.04)   (97.9–100)  (1966.9–2582.8)   \n",
      "11         99.5         98.4         2.68          100           1399.7   \n",
      "12  (98.1–99.9)  (96.5–99.4)  (2.47–2.91)   (98.6–100)  (1214.7–1577.9)   \n",
      "13         99.5         97.9         4.49         99.6           1061.0   \n",
      "14  (98.1–99.9)  (95.8–99.1)  (4.07–4.96)   (97.9–100)   (924.4–1217.7)   \n",
      "15         98.9         97.6         2.46         93.6            130.1   \n",
      "16  (97.3–99.7)  (95.5–98.9)  (2.25–2.69)  (90.0–96.2)    (111.1–152.4)   \n",
      "17         99.2         98.1         3.42         87.7            148.6   \n",
      "18  (97.7–99.8)  (96.2–99.2)  (3.16–3.70)  (83.1–91.4)    (117.8–187.5)   \n",
      "19         94.1         87.2         1.34         93.9           1010.0   \n",
      "20  (91.2–96.3)  (83.3–90.4)  (1.18–1.52)  (90.2–96.5)   (820.6–1243.1)   \n",
      "21          NaN       (N 94)          NaN           (N             260)   \n",
      "22         31.2         19.4         0.10         58.0             40.9   \n",
      "23  (22.0–41.6)  (11.9–28.9)  (0.08–0.13)  (51.7–64.1)      (31.4–53.3)   \n",
      "24         28.7         10.6         0.11         19.6              8.6   \n",
      "25  (19.9–39.0)   (5.2–18.7)  (0.09–0.13)  (15.0–25.0)       (7.1–10.5)   \n",
      "\n",
      "     (95% CI).8       (95% CI).9  \n",
      "0           NaN              NaN  \n",
      "1           4.5              4.7  \n",
      "2    (1.2–11.1)        (3.9–5.6)  \n",
      "3           100           1010.4  \n",
      "4    (95.9–100)   (846.0–1206.7)  \n",
      "5           3.4              4.5  \n",
      "6     (0.7–9.6)        (3.9–5.3)  \n",
      "7          95.5            999.4  \n",
      "8   (88.9–98.8)   (716.4–1394.4)  \n",
      "9          18.2             10.2  \n",
      "10  (10.8–27.8)       (6.5–15.8)  \n",
      "11          100           1233.3  \n",
      "12   (95.9–100)   (988.4–1538.8)  \n",
      "13         98.9           1890.6  \n",
      "14   (93.9–100)  (1439.8–2482.5)  \n",
      "15         95.5            212.3  \n",
      "16  (88.8–98.7)    (162.1–278.1)  \n",
      "17         92.1             52.0  \n",
      "18  (84.5–96.8)      (38.9–69.4)  \n",
      "19         97.7           4412.9  \n",
      "20  (91.9–99.7)  (3313.2–5877.5)  \n",
      "21           (N              89)  \n",
      "22         68.5             83.3  \n",
      "23  (57.8–78.0)     (51.6–134.3)  \n",
      "24          3.4              4.5  \n",
      "25    (0.7–9.5)        (3.9–5.3)  \n",
      "Table saved as extracted_table_page_1_table_0.xlsx\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<a href='extracted_table_page_1_table_0.xlsx' target='_blank'>extracted_table_page_1_table_0.xlsx</a><br>"
      ],
      "text/plain": [
       "/kaggle/working/extracted_table_page_1_table_0.xlsx"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Replace page_number and table_index with the page and table that you want.\n",
    "extract_specific_table(file_path, page_number=1, table_index=0)"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5632258,
     "sourceId": 9301808,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30761,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 26.142638,
   "end_time": "2024-09-02T15:17:17.479962",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-09-02T15:16:51.337324",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
